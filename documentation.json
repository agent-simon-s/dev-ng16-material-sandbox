{
    "pipes": [],
    "interfaces": [
        {
            "name": "CmpMatTableItem",
            "id": "interface-CmpMatTableItem-215ff9487ed2d34d30e71f57f178bd69af5d7e54212f22acb57cec42699cfe3d9a88f260404e024defaeb8ab14ad6cc7a02e976da4214184e84bb12f3392593e",
            "file": "src/app/components/cmp-mat-table/cmp-mat-table-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface CmpMatTableItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: CmpMatTableItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the CmpMatTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class CmpMatTableDataSource extends DataSource<CmpMatTableItem> {\n  data: CmpMatTableItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator | undefined;\n  sort: MatSort | undefined;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<CmpMatTableItem[]> {\n    if (this.paginator && this.sort) {\n      // Combine everything that affects the rendered data into one update\n      // stream for the data-table to consume.\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\n        .pipe(map(() => {\n          return this.getPagedData(this.getSortedData([...this.data ]));\n        }));\n    } else {\n      throw Error('Please set the paginator and sort on the data source before connecting.');\n    }\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect(): void {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: CmpMatTableItem[]): CmpMatTableItem[] {\n    if (this.paginator) {\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      return data.splice(startIndex, this.paginator.pageSize);\n    } else {\n      return data;\n    }\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: CmpMatTableItem[]): CmpMatTableItem[] {\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort?.direction === 'asc';\n      switch (this.sort?.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "CmpMatTablePrototypeItem",
            "id": "interface-CmpMatTablePrototypeItem-267597b6ef8e231a213cbf6470177a3d69fd583fc53c7be966c23e5fd6cc4e63a1a94e738ac3cf6fa7267863341f13b379d1c8ea5e296b4cd2617019eecd7272",
            "file": "src/app/components/cmp-mat-table-prototype/cmp-mat-table-prototype-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface CmpMatTablePrototypeItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: CmpMatTablePrototypeItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the CmpMatTablePrototype view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class CmpMatTablePrototypeDataSource extends DataSource<CmpMatTablePrototypeItem> {\n  data: CmpMatTablePrototypeItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator | undefined;\n  sort: MatSort | undefined;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<CmpMatTablePrototypeItem[]> {\n    if (this.paginator && this.sort) {\n      // Combine everything that affects the rendered data into one update\n      // stream for the data-table to consume.\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\n        .pipe(map(() => {\n          return this.getPagedData(this.getSortedData([...this.data ]));\n        }));\n    } else {\n      throw Error('Please set the paginator and sort on the data source before connecting.');\n    }\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect(): void {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: CmpMatTablePrototypeItem[]): CmpMatTablePrototypeItem[] {\n    if (this.paginator) {\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      return data.splice(startIndex, this.paginator.pageSize);\n    } else {\n      return data;\n    }\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: CmpMatTablePrototypeItem[]): CmpMatTablePrototypeItem[] {\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort?.direction === 'asc';\n      switch (this.sort?.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "MerchandiseInfo",
            "id": "interface-MerchandiseInfo-31b6afd8269c202ae7b0c7daaa9fb1d1b5518f59fba476de7343eae57355dc6419a640971af39b9ffbcdcb4d845402c447573fc75b65e6932841a16e903dc99c",
            "file": "src/app/data/items_data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface MerchandiseInfo {\n  name: string;\n  sku: number;\n  brand: string;\n  department:string;\n  cost: number;\n  price: number;\n  status: string;\n}\n\nexport const MERCHANT_DATA: MerchandiseInfo[] = [\n  {sku: 11111111, name: 'Hydrogen', price: 1.0079, cost: 0.99, brand: 'H', department: 'food', status: 'in stock'},\n  {sku: 89422, name: 'Helium', price: 4.0026, cost: 0.99, brand: 'He', department: 'food', status: 'in stock'},\n  {sku: 51588, name: 'Lithium', price: 6.941, cost: 0.99, brand: 'Li', department: 'food', status: 'in stock'},\n  {sku: 41575, name: 'Beryllium', price: 9.0122, cost: 0.99, brand: 'Be', department: 'food', status: 'in stock'},\n  {sku: 28046312, name: 'Boron', price: 10.811, cost: 0.99, brand: 'B', department: 'food', status: 'in stock'},\n  {sku: 96025071, name: 'Carbon', price: 12.0107, cost: 0.99, brand: 'C', department: 'food', status: 'in stock'},\n  {sku: 859486042, name: 'Nitrogen', price: 14.0067, cost: 0.99, brand: 'N', department: 'food', status: 'in stock'},\n  {sku: 52146128, name: 'Oxygen', price: 15.9994, cost: 0.99, brand: 'O', department: 'food', status: 'in stock'},\n  {sku: 38001985, name: 'Fluorine', price: 18.9984, cost: 0.99, brand: 'F', department: 'food', status: 'in stock'},\n  {sku: 998800, name: 'Neon', price: 20.1797, cost: 0.99, brand: 'Ne', department: 'food', status: 'in stock'},\n  {sku: 55778899, name: 'Lithium', price: 6.941, cost: 0.99, brand: 'Li', department: 'food', status: 'in stock'},\n  {sku: 10099, name: 'Beryllium', price: 9.0122, cost: 0.99, brand: 'Be', department: 'food', status: 'in stock'},\n  {sku: 1230001, name: 'Boron', price: 10.811, cost: 0.99, brand: 'B', department: 'food', status: 'in stock'},\n  {sku: 39299111, name: 'Carbon', price: 12.0107, cost: 0.99, brand: 'C', department: 'food', status: 'in stock'},\n  {sku: 85484752, name: 'Nitrogen', price: 14.0067, cost: 0.99, brand: 'N', department: 'food', status: 'in stock'},\n  {sku: 52816188, name: 'Oxygen', price: 15.9994, cost: 0.99, brand: 'O', department: 'food', status: 'in stock'},\n  {sku: 13719895, name: 'Fluorine', price: 18.9984, cost: 0.99, brand: 'F', department: 'food', status: 'in stock'},\n  {sku: 99880099, name: 'Neon', price: 20.1797, cost: 0.99, brand: 'Ne', department: 'food', status: 'in stock'},\n  {sku: 19912008, name: 'Lithium', price: 6.941, cost: 0.99, brand: 'Li', department: 'food', status: 'in stock'},\n  {sku: 19911996, name: 'Beryllium', price: 9.0122, cost: 0.99, brand: 'Be', department: 'food', status: 'in stock'},\n  {sku: 2123139, name: 'Boron', price: 10.811, cost: 0.99, brand: 'B', department: 'food', status: 'in stock'},\n  {sku: 57587507, name: 'Carbon', price: 12.0107, cost: 0.99, brand: 'C', department: 'food', status: 'in stock'},\n  {sku: 85948377, name: 'Nitrogen', price: 14.0067, cost: 0.99, brand: 'N', department: 'food', status: 'in stock'},\n  {sku: 52855778, name: 'Oxygen', price: 15.9994, cost: 0.99, brand: 'O', department: 'food', status: 'in stock'},\n  {sku: 38045895, name: 'Fluorine', price: 18.9984, cost: 0.99, brand: 'F', department: 'food', status: 'in stock'},\n  {sku: 56790800, name: 'Neon', price: 20.1797, cost: 0.99, brand: 'Ne', department: 'food', status: 'in stock'},\n];\n",
            "properties": [
                {
                    "name": "brand",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "cost",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "department",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "sku",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "DataTableFilterService",
            "id": "injectable-DataTableFilterService-4e3b548fc947c6a8ff0f5f7f411dcee686f833780c3b775e7964c36fea3c74eab2fcb9b8a40f887c99927b5f52a86882a7f1f695af928252425a5b3842d12f3d",
            "file": "src/app/components/cmp-data-table-filter/srv-data-table-filter.service.ts",
            "properties": [
                {
                    "name": "myDataStore",
                    "defaultValue": "\"This is may data string\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "showSibling",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "myGetMethod",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "myOtherGetMethod",
                    "args": [
                        {
                            "name": "value",
                            "type": "String",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "String",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n//import { MerchandiseInfo, MERCHANT_DATA } from \"../../data/items_data\";\n\n@Injectable()\nexport class DataTableFilterService {\n  protected myDataStore: string = \"This is may data string\";\n\n  showSibling = new Subject<boolean>();\n\n  constructor() { }\n\n  myGetMethod(){\n    return this.myDataStore;\n  }\n\n  myOtherGetMethod(value:String):any {\n    return console.log(\"My Value is\", value)\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "CmpMatTableDataSource",
            "id": "class-CmpMatTableDataSource-215ff9487ed2d34d30e71f57f178bd69af5d7e54212f22acb57cec42699cfe3d9a88f260404e024defaeb8ab14ad6cc7a02e976da4214184e84bb12f3392593e",
            "file": "src/app/components/cmp-mat-table/cmp-mat-table-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface CmpMatTableItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: CmpMatTableItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the CmpMatTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class CmpMatTableDataSource extends DataSource<CmpMatTableItem> {\n  data: CmpMatTableItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator | undefined;\n  sort: MatSort | undefined;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<CmpMatTableItem[]> {\n    if (this.paginator && this.sort) {\n      // Combine everything that affects the rendered data into one update\n      // stream for the data-table to consume.\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\n        .pipe(map(() => {\n          return this.getPagedData(this.getSortedData([...this.data ]));\n        }));\n    } else {\n      throw Error('Please set the paginator and sort on the data source before connecting.');\n    }\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect(): void {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: CmpMatTableItem[]): CmpMatTableItem[] {\n    if (this.paginator) {\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      return data.splice(startIndex, this.paginator.pageSize);\n    } else {\n      return data;\n    }\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: CmpMatTableItem[]): CmpMatTableItem[] {\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort?.direction === 'asc';\n      switch (this.sort?.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "EXAMPLE_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CmpMatTableItem[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "description": "<p>Data source for the CmpMatTable view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).</p>\n",
            "rawdescription": "\n\nData source for the CmpMatTable view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<CmpMatTableItem[]>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConnect this data source to the table. The table will only update when\nthe returned stream emits new items.\n",
                    "description": "<p>Connect this data source to the table. The table will only update when\nthe returned stream emits new items.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1606,
                                "end": 1613,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A stream of the items to be rendered.</p>\n"
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n",
                    "description": "<p> Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.</p>\n"
                },
                {
                    "name": "getPagedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "CmpMatTableItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "CmpMatTableItem[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPaginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Paginate the data (client-side). If you&#39;re using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "CmpMatTableItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSortedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "CmpMatTableItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "CmpMatTableItem[]",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Sort the data (client-side). If you&#39;re using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "CmpMatTableItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [
                "DataSource"
            ],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CmpMatTablePrototypeDataSource",
            "id": "class-CmpMatTablePrototypeDataSource-267597b6ef8e231a213cbf6470177a3d69fd583fc53c7be966c23e5fd6cc4e63a1a94e738ac3cf6fa7267863341f13b379d1c8ea5e296b4cd2617019eecd7272",
            "file": "src/app/components/cmp-mat-table-prototype/cmp-mat-table-prototype-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface CmpMatTablePrototypeItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: CmpMatTablePrototypeItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the CmpMatTablePrototype view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class CmpMatTablePrototypeDataSource extends DataSource<CmpMatTablePrototypeItem> {\n  data: CmpMatTablePrototypeItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator | undefined;\n  sort: MatSort | undefined;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<CmpMatTablePrototypeItem[]> {\n    if (this.paginator && this.sort) {\n      // Combine everything that affects the rendered data into one update\n      // stream for the data-table to consume.\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\n        .pipe(map(() => {\n          return this.getPagedData(this.getSortedData([...this.data ]));\n        }));\n    } else {\n      throw Error('Please set the paginator and sort on the data source before connecting.');\n    }\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect(): void {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: CmpMatTablePrototypeItem[]): CmpMatTablePrototypeItem[] {\n    if (this.paginator) {\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      return data.splice(startIndex, this.paginator.pageSize);\n    } else {\n      return data;\n    }\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: CmpMatTablePrototypeItem[]): CmpMatTablePrototypeItem[] {\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort?.direction === 'asc';\n      switch (this.sort?.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "EXAMPLE_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CmpMatTablePrototypeItem[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "description": "<p>Data source for the CmpMatTablePrototype view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).</p>\n",
            "rawdescription": "\n\nData source for the CmpMatTablePrototype view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<CmpMatTablePrototypeItem[]>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConnect this data source to the table. The table will only update when\nthe returned stream emits new items.\n",
                    "description": "<p>Connect this data source to the table. The table will only update when\nthe returned stream emits new items.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1660,
                                "end": 1667,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A stream of the items to be rendered.</p>\n"
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n",
                    "description": "<p> Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.</p>\n"
                },
                {
                    "name": "getPagedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "CmpMatTablePrototypeItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "CmpMatTablePrototypeItem[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPaginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Paginate the data (client-side). If you&#39;re using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "CmpMatTablePrototypeItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSortedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "CmpMatTablePrototypeItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "CmpMatTablePrototypeItem[]",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Sort the data (client-side). If you&#39;re using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "CmpMatTablePrototypeItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [
                "DataSource"
            ],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-312cd3a6f8fd67cf12b61868a2547fe14292a032b70d6e28564b8f4301a3b769fc1e17f072d956290583be966f835f99200c4532f454241287e478e9002fa27d",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'dev-ng-mat-test'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "RouterLinkActive"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatSlideToggleModule",
                    "type": "module"
                },
                {
                    "name": "LoHeaderMainComponent",
                    "type": "component"
                },
                {
                    "name": "LoNavMainComponent",
                    "type": "component"
                },
                {
                    "name": "PageTablesComponent",
                    "type": "component"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterOutlet, RouterLink, RouterLinkActive } from '@angular/router';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\n\nimport { MatSort} from '@angular/material/sort';\n\nimport { PageTablesComponent } from './pages/page-tables/page-tables.component';\nimport { LoHeaderMainComponent } from './layouts/lo-header-main/lo-header-main.component';\nimport { LoNavMainComponent } from './layouts/lo-nav-main/lo-nav-main.component';\n\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  imports: [ \n    CommonModule, \n    RouterLink, \n    RouterOutlet, \n    RouterLinkActive,\n    MatButtonModule, \n    MatSlideToggleModule, \n    LoHeaderMainComponent, \n    LoNavMainComponent, \n    PageTablesComponent, \n    MatTableModule\n  ]\n})\n\nexport class AppComponent {\n  title = 'dev-ng-mat-test'; \n}\n \n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div id=\"root\">\n  <main class=\"main\">\n    <div class=\"content\">\n      <app-lo-nav-main />\n      <div class=\"divider\" role=\"separator\" aria-label=\"Divider\"></div>\n      <div class=\"right-side\">\n        <br>\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </main>\n  <footer></footer>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-86e2311c54fbca7431c12e070d0fd5b0ebe343eec0553a392f182ba0e04a8f86613233d26ee47718fd0e7a65078f580c76a1fcc928ce55de81193d6618025bc4",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 798,
                            "end": 811,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 799,
                                "end": 807,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 51
                    }
                }
            }
        },
        {
            "name": "CmpDataTableColLoopComponent",
            "id": "component-CmpDataTableColLoopComponent-b4b5cc427db14f240d4467d54c8e7acbddfd3ec0435fd3bce10f2e1ea5de586f925fd2e40663300ca0db3aa896c3702e824e97788776469000f8a09eeb3b80e2",
            "file": "src/app/components/cmp-data-table-col-loop/cmp-data-table-col-loop.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cmp-data-table-col-loop",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cmp-data-table-col-loop.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columns",
                    "defaultValue": "[\n    {\n      columnDef: 'sku',\n      header: 'No.',\n      cell: (merch: MerchandiseInfo) => `${merch.sku}`,\n    },\n    {\n      columnDef: 'name',\n      header: 'Name',\n      cell: (merch: MerchandiseInfo) => `${merch.name}`,\n    },\n    {\n      columnDef: 'cost',\n      header: 'cost',\n      cell: (merch: MerchandiseInfo) => `${merch.cost}`,\n    },\n    {\n      columnDef: 'price',\n      header: 'price',\n      cell: (merch: MerchandiseInfo) => `${merch.price}`,\n    },\n    {\n      columnDef: 'brand',\n      header: 'brand',\n      cell: (merch: MerchandiseInfo) => `${merch.brand}`,\n    },\n    {\n      columnDef: 'department',\n      header: 'department',\n      cell: (merch: MerchandiseInfo) => `${merch.department}`,\n    },\n    {\n      columnDef: 'status',\n      header: 'status',\n      cell: (merch: MerchandiseInfo) => `${merch.status}`,\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource<MerchandiseInfo>(MERCHANT_DATA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "this.columns.map(c => c.columnDef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { MerchandiseInfo, MERCHANT_DATA } from \"../../data/items_data\";\n\n@Component({\n  selector: 'app-cmp-data-table-col-loop',\n  styleUrl: './cmp-data-table-col-loop.component.scss',\n  templateUrl: './cmp-data-table-col-loop.component.html',\n  standalone: true,\n  imports: [CommonModule,MatTableModule],\n})\nexport class CmpDataTableColLoopComponent {\n\n  // col as for loop\n  columns = [\n    {\n      columnDef: 'sku',\n      header: 'No.',\n      cell: (merch: MerchandiseInfo) => `${merch.sku}`,\n    },\n    {\n      columnDef: 'name',\n      header: 'Name',\n      cell: (merch: MerchandiseInfo) => `${merch.name}`,\n    },\n    {\n      columnDef: 'cost',\n      header: 'cost',\n      cell: (merch: MerchandiseInfo) => `${merch.cost}`,\n    },\n    {\n      columnDef: 'price',\n      header: 'price',\n      cell: (merch: MerchandiseInfo) => `${merch.price}`,\n    },\n    {\n      columnDef: 'brand',\n      header: 'brand',\n      cell: (merch: MerchandiseInfo) => `${merch.brand}`,\n    },\n    {\n      columnDef: 'department',\n      header: 'department',\n      cell: (merch: MerchandiseInfo) => `${merch.department}`,\n    },\n    {\n      columnDef: 'status',\n      header: 'status',\n      cell: (merch: MerchandiseInfo) => `${merch.status}`,\n    },\n  ];\n  dataSource = new MatTableDataSource<MerchandiseInfo>(MERCHANT_DATA);\n  displayedColumns = this.columns.map(c => c.columnDef);\n}\n",
            "styleUrl": "./cmp-data-table-col-loop.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<!-- for columns -->\n<table mat-table [dataSource]=\"dataSource\"  class=\"mat-elevation-z8 demo-table\">\n    @for (column of columns; track column) {\n        <ng-container [matColumnDef]=\"column.columnDef\">\n            <th mat-header-cell *matHeaderCellDef>\n                {{column.header}}\n            </th>\n            <td mat-cell *matCellDef=\"let row\">\n                {{column.cell(row)}}\n            </td>\n        </ng-container>\n    }\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n"
        },
        {
            "name": "CmpDataTableComponent",
            "id": "component-CmpDataTableComponent-5e0a9b68454cf73c9eeab8fb6957709ddcaacbf12b550c46cf728f48bba86d90f560a9abc8361ca236bb70c4b2225e6d8ccf301249899b97a14be09f30cfe7ec",
            "file": "src/app/components/cmp-data-table/cmp-data-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cmp-data-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cmp-data-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columns",
                    "defaultValue": "[\n    {\n      columnDef: 'sku',\n      header: 'No.',\n      cell: (merch: MerchandiseInfo) => `${merch.sku}`,\n    },\n    {\n      columnDef: 'name',\n      header: 'Name',\n      cell: (merch: MerchandiseInfo) => `${merch.name}`,\n    },\n    {\n      columnDef: 'cost',\n      header: 'cost',\n      cell: (merch: MerchandiseInfo) => `${merch.cost}`,\n    },\n    {\n      columnDef: 'price',\n      header: 'price',\n      cell: (merch: MerchandiseInfo) => `${merch.price}`,\n    },\n    {\n      columnDef: 'brand',\n      header: 'brand',\n      cell: (merch: MerchandiseInfo) => `${merch.brand}`,\n    },\n    {\n      columnDef: 'department',\n      header: 'department',\n      cell: (merch: MerchandiseInfo) => `${merch.department}`,\n    },\n    {\n      columnDef: 'status',\n      header: 'status',\n      cell: (merch: MerchandiseInfo) => `${merch.status}`,\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource<MerchandiseInfo>(MERCHANT_DATA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "this.columns.map(c => c.columnDef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<string[]>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<string[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "CdkDropList"
                },
                {
                    "name": "CdkDrag"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                }
            ],
            "description": "<p> with pagination\n with drag and drop columns</p>\n",
            "rawdescription": "\n\n with pagination\n with drag and drop columns\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CdkDragDrop, CdkDrag, CdkDropList, moveItemInArray} from '@angular/cdk/drag-drop';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator, MatPaginatorModule} from \"@angular/material/paginator\";\nimport { MerchandiseInfo, MERCHANT_DATA } from \"../../data/items_data\";\n\n/**\n * @title Table looping columns, with pagination\n *  with pagination\n *  with drag and drop columns\n */\n\n@Component({\n  selector: 'app-cmp-data-table',\n  standalone: true,\n  imports: [CommonModule, MatTableModule, CdkDropList, CdkDrag, MatPaginatorModule],\n  templateUrl: './cmp-data-table.component.html',\n  styleUrl: './cmp-data-table.component.scss'\n})\n\n// const pageingSizes:any = [15, 30, 60]\n\nexport class CmpDataTableComponent {\n\n  // col as for loop\n  columns = [\n    {\n      columnDef: 'sku',\n      header: 'No.',\n      cell: (merch: MerchandiseInfo) => `${merch.sku}`,\n    },\n    {\n      columnDef: 'name',\n      header: 'Name',\n      cell: (merch: MerchandiseInfo) => `${merch.name}`,\n    },\n    {\n      columnDef: 'cost',\n      header: 'cost',\n      cell: (merch: MerchandiseInfo) => `${merch.cost}`,\n    },\n    {\n      columnDef: 'price',\n      header: 'price',\n      cell: (merch: MerchandiseInfo) => `${merch.price}`,\n    },\n    {\n      columnDef: 'brand',\n      header: 'brand',\n      cell: (merch: MerchandiseInfo) => `${merch.brand}`,\n    },\n    {\n      columnDef: 'department',\n      header: 'department',\n      cell: (merch: MerchandiseInfo) => `${merch.department}`,\n    },\n    {\n      columnDef: 'status',\n      header: 'status',\n      cell: (merch: MerchandiseInfo) => `${merch.status}`,\n    }\n  ];\n  dataSource = new MatTableDataSource<MerchandiseInfo>(MERCHANT_DATA);\n  displayedColumns = this.columns.map(c => c.columnDef);\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.displayedColumns, event.previousIndex, event.currentIndex);\n  }\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n}\n\n\n",
            "styleUrl": "./cmp-data-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<!-- for columns -->\n<div class=\"mat-elevation-z8\">\n    <table \n        mat-table\n        cdkDropList\n        cdkDropListOrientation=\"horizontal\"\n        (cdkDropListDropped)=\"drop($event)\"\n        [dataSource]=\"dataSource\"  \n        class=\"mat-elevation-z8 demo-table\"\n        >\n        @for (column of columns; track column) {\n            <ng-container [matColumnDef]=\"column.columnDef\">\n                <th mat-header-cell cdkDrag *matHeaderCellDef>{{column.header}}</th>\n                <td mat-cell *matCellDef=\"let row\">{{column.cell(row)}}</td>\n            </ng-container>\n        }\n\n        <!-- <ng-container [matColumnDef]=\"more\">\n            <th mat-header-cell cdkDrag *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let row\">...</td>\n        </ng-container> -->\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <mat-paginator [pageSize]=\"10\"\n                   [pageSizeOptions]=\"[5, 10, 20]\"\n                   showFirstLastButtons\n                   aria-label=\"Select page of periodic elements\">\n    </mat-paginator>\n</div>\n"
        },
        {
            "name": "CmpDataTableDragComponent",
            "id": "component-CmpDataTableDragComponent-f046a7500771ccd1da6d3ac940d5813749fcb0d87a093f34dcb19dda9fb63967dfbb784bc567ff94103ac6ad2cee242b94c2b7b90a8db6d40020eec2abb0a762",
            "file": "src/app/components/cmp-data-table-drag/cmp-data-table-drag.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cmp-data-table-drag",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cmp-data-table-drag.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource(MERCHANT_DATA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['sku', 'name', 'price', 'cost']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<string[]>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<string[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "CdkDropList"
                },
                {
                    "name": "CdkDrag"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild}  from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CdkDragDrop, CdkDrag, CdkDropList, moveItemInArray} from '@angular/cdk/drag-drop';\nimport { MatPaginator, MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { MerchandiseInfo, MERCHANT_DATA } from \"../../data/items_data\";\n\n/**\n * @title Data table with re-orderable columns.\n */\n\n@Component({\n  selector: 'app-cmp-data-table-drag',\n  standalone: true,\n    imports: [CommonModule, MatTableModule, CdkDropList, CdkDrag, MatPaginatorModule],\n  templateUrl: './cmp-data-table-drag.component.html',\n  styleUrl: './cmp-data-table-drag.component.scss'\n})\n\n\nexport class CmpDataTableDragComponent implements AfterViewInit {\n\n  displayedColumns: string[] = ['sku', 'name', 'price', 'cost'];\n  dataSource = new MatTableDataSource(MERCHANT_DATA);\n\n  // @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.displayedColumns, event.previousIndex, event.currentIndex);\n  }\n\n  ngAfterViewInit() {\n    // this.dataSource.paginator = this.paginator;\n    console.log(\"view intitt'd\");\n  }\n}\n",
            "styleUrl": "./cmp-data-table-drag.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div class=\"mat-elevation-z8\">\n    <table \n        mat-table [dataSource]=\"dataSource\"\n        cdkDropList\n        cdkDropListOrientation=\"horizontal\"\n        (cdkDropListDropped)=\"drop($event)\"\n        >\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"sku\">\n            <th mat-header-cell  cdkDrag *matHeaderCellDef> No. </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.sku}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell cdkDrag *matHeaderCellDef> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <!-- price Column -->\n        <ng-container matColumnDef=\"price\">\n            <th mat-header-cell cdkDrag *matHeaderCellDef> price </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.price}} </td>\n        </ng-container>\n\n        <!-- cost Column -->\n        <ng-container matColumnDef=\"cost\">\n            <th mat-header-cell cdkDrag *matHeaderCellDef> cost </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.cost}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n</div>\n\n"
        },
        {
            "name": "CmpDataTableFilterComponent",
            "id": "component-CmpDataTableFilterComponent-0110783b029f00702c6e640bc00b410e09378ce739ca83c9f1ff7010e152cd165bc5c3ef31d11d6f6afb27c6a4353446e81843e73c257386a92f4cbb3a752f20",
            "file": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cmp-data-table-filter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cmp-data-table-filter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autoheight",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "columnsSelected",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "filterDataUrl",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "gridStructure",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "linkItem",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "linkMore",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "pageable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "pageindex",
                    "defaultValue": "3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "pagerheight",
                    "defaultValue": "60",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "pagermode",
                    "defaultValue": "\"default\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "pagesize",
                    "defaultValue": "6",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "pagesizeoptions",
                    "defaultValue": "[6, 10, 20]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "{}",
                    "decorators": []
                },
                {
                    "name": "rowsheight",
                    "defaultValue": "50",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "showSearch",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "sortable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "statusbarheight",
                    "defaultValue": "60",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "updateGridData",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "url",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource(MERCHANT_DATA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['sku', 'name', 'price', 'cost']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyFilter",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "myClickMethod",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n\n",
            "type": "component",
            "sourceCode": "import {Component, Input, ViewChild} from '@angular/core';\nimport { MatPaginator, MatPaginatorModule} from '@angular/material/paginator';\n//import {MatSort, MatSortModule} from '@angular/material/sort';\nimport {MatTableDataSource, MatTableModule} from '@angular/material/table';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MerchandiseInfo, MERCHANT_DATA } from \"../../data/items_data\";\n\n\n/**\n * @title Data Table with filtering.\n */\n\n@Component({\n  selector: 'app-cmp-data-table-filter',\n  standalone: true,\n  imports: [MatFormFieldModule, MatInputModule, MatTableModule, MatPaginatorModule],\n  templateUrl: './cmp-data-table-filter.component.html',\n  styleUrl: './cmp-data-table-filter.component.scss'\n})\n\nexport class CmpDataTableFilterComponent {\n  displayedColumns: string[] = ['sku', 'name', 'price', 'cost'];\n  dataSource = new MatTableDataSource(MERCHANT_DATA);\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  // @ViewChild(MatSort) sort!: MatSort;\n\n  @Input() updateGridData: string = \"\";\n  @Input() url: string = \"\";\n  @Input() filterDataUrl: string = \"\";\n  @Input() showSearch: boolean = true;\n  //@Input() gridStructure: GridStructure[] = [];\n  @Input() gridStructure: string = \"\";\n  @Input() rowsheight: number = 50;\n  @Input() statusbarheight: number = 60;\n  @Input() pagermode: any = \"default\";\n  @Input() pageindex: number = 3\n  @Input() pagesize: number = 6\n  @Input() pagesizeoptions = [6, 10, 20];\n  @Input() pagerheight = 60;\n  @Input() autoheight: boolean = true;\n  @Input() pageable: boolean =true;\n  @Input() sortable: boolean =true;\n  @Input() linkItem: boolean =false;\n  @Input() linkMore: boolean =true;\n  @Input() columnsSelected: any[] = [];\n\n  // constructor() {\n  //   // Create 100 users\n  //   const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\n\n  //   // Assign the data to the data source for the table to render\n  //   this.dataSource = new MatTableDataSource(users);\n  // }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    //this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  myClickMethod(id:string): void {\n    console.log(id);\n  }\n}\n\n\n// /** Builds and returns a new User. */\n// function createNewUser(id: number): UserData {\n//   const name =\n//     NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\n//     ' ' +\n//     NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\n//     '.';\n\n//   return {\n//     id: id.toString(),\n//     name: name,\n//     progress: Math.round(Math.random() * 100).toString(),\n//     fruit: FRUITS[Math.round(Math.random() * (FRUITS.length - 1))],\n//   };\n// }\n",
            "styleUrl": "./cmp-data-table-filter.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-form-field>\n  <mat-label>Filter</mat-label>\n  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n</mat-form-field>\n\n<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <!-- ID Column -->\n    <ng-container matColumnDef=\"sku\">\n      <th mat-header-cell *matHeaderCellDef> sku </th>\n      @if (linkItem) {\n        <td mat-cell *matCellDef=\"let row\"><a (click)=\"myClickMethod(row.sku)\" > Y: {{row.sku}}</a></td>\n      } @else {\n        <td mat-cell *matCellDef=\"let row\"> N:{{row.sku}} </td>\n      }\n    </ng-container>\n\n    <!-- Progress Column -->\n    <ng-container matColumnDef=\"price\">\n      <th mat-header-cell *matHeaderCellDef> Price </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.price}}% </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n    </ng-container>\n\n    <!-- Fruit Column -->\n    <ng-container matColumnDef=\"cost\">\n      <th mat-header-cell *matHeaderCellDef> cost </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.cost}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    <!-- Row shown when there is no matching data. -->\n    <tr class=\"mat-row\" *matNoDataRow>\n      <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n    </tr>\n  </table>\n  @if (pageable) {\n   <mat-paginator #paginator\n        [length]=\"dataSource.data.length\"\n        [pageIndex]=\"pageindex\"\n        [pageSize]=\"pagesize\"\n        [pageSizeOptions]=\"pagesizeoptions\"\n        showFirstLastButtons\n        aria-label=\"Select page\">\n    </mat-paginator>\n  }\n</div>\n"
        },
        {
            "name": "CmpDataTableLoopComponent",
            "id": "component-CmpDataTableLoopComponent-6f19d6df1e25292ae9e2c40c667c3c89275e16dfa48a41a556337a9aaf66abf144c9b9562418d715e7d52c7a8a867e677be9cd92cb8af6dd09f56b67e66f43ed",
            "file": "src/app/components/cmp-data-table-loop/cmp-data-table-loop.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cmp-data-table-loop",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cmp-data-table-loop.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columns",
                    "defaultValue": "[\n    {\n      columnDef: 'sku',\n      header: 'No.',\n      cell: (merch: MerchandiseInfo) => `${merch.sku}`,\n    },\n    {\n      columnDef: 'name',\n      header: 'Name',\n      cell: (merch: MerchandiseInfo) => `${merch.name}`,\n    },\n    {\n      columnDef: 'cost',\n      header: 'cost',\n      cell: (merch: MerchandiseInfo) => `${merch.cost}`,\n    },\n    {\n      columnDef: 'price',\n      header: 'price',\n      cell: (merch: MerchandiseInfo) => `${merch.price}`,\n    },\n    {\n      columnDef: 'brand',\n      header: 'brand',\n      cell: (merch: MerchandiseInfo) => `${merch.brand}`,\n    },\n    {\n      columnDef: 'department',\n      header: 'department',\n      cell: (merch: MerchandiseInfo) => `${merch.department}`,\n    },\n    {\n      columnDef: 'status',\n      header: 'status',\n      cell: (merch: MerchandiseInfo) => `${merch.status}`,\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource<MerchandiseInfo>(MERCHANT_DATA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "this.columns.map(c => c.columnDef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { MerchandiseInfo, MERCHANT_DATA } from \"../../data/items_data\";\n\n@Component({\n  selector: 'app-cmp-data-table-loop',\n  standalone: true,\n  imports: [CommonModule,MatTableModule],\n  templateUrl: './cmp-data-table-loop.component.html',\n  styleUrl: './cmp-data-table-loop.component.scss'\n})\nexport class CmpDataTableLoopComponent {\n\n  // col as for loop\n  columns = [\n    {\n      columnDef: 'sku',\n      header: 'No.',\n      cell: (merch: MerchandiseInfo) => `${merch.sku}`,\n    },\n    {\n      columnDef: 'name',\n      header: 'Name',\n      cell: (merch: MerchandiseInfo) => `${merch.name}`,\n    },\n    {\n      columnDef: 'cost',\n      header: 'cost',\n      cell: (merch: MerchandiseInfo) => `${merch.cost}`,\n    },\n    {\n      columnDef: 'price',\n      header: 'price',\n      cell: (merch: MerchandiseInfo) => `${merch.price}`,\n    },\n    {\n      columnDef: 'brand',\n      header: 'brand',\n      cell: (merch: MerchandiseInfo) => `${merch.brand}`,\n    },\n    {\n      columnDef: 'department',\n      header: 'department',\n      cell: (merch: MerchandiseInfo) => `${merch.department}`,\n    },\n    {\n      columnDef: 'status',\n      header: 'status',\n      cell: (merch: MerchandiseInfo) => `${merch.status}`,\n    },\n  ];\n  dataSource = new MatTableDataSource<MerchandiseInfo>(MERCHANT_DATA);\n  displayedColumns = this.columns.map(c => c.columnDef);\n}\n",
            "styleUrl": "./cmp-data-table-loop.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<!-- for columns -->\n<table mat-table [dataSource]=\"dataSource\"  class=\"mat-elevation-z8 demo-table\">\n    @for (column of columns; track column) {\n    <ng-container [matColumnDef]=\"column.columnDef\">\n        <th mat-header-cell *matHeaderCellDef>\n    {{column.header}}\n    </th>\n    <td mat-cell *matCellDef=\"let row\">\n    {{column.cell(row)}}\n    </td>\n</ng-container>\n    }\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n"
        },
        {
            "name": "CmpDataTablePageComponent",
            "id": "component-CmpDataTablePageComponent-4b4b9daed93a98c7042cd44ae6bef79142adcd1fd86e65b7717a44dec113a79479f266624b222d28f5c6297accd1006089c68a809a400c40743d619983936973",
            "file": "src/app/components/cmp-data-table-page/cmp-data-table-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cmp-data-table-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cmp-data-table-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource(MERCHANT_DATA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['sku', 'name', 'price', 'cost']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatPaginator, MatPaginatorModule} from \"@angular/material/paginator\";\nimport {MatTableDataSource, MatTableModule} from \"@angular/material/table\";\nimport { MerchandiseInfo, MERCHANT_DATA } from \"../../data/items_data\";\n\n@Component({\n  selector: 'app-cmp-data-table-page',\n  standalone: true,\n    imports: [CommonModule, MatPaginatorModule, MatTableModule],\n  templateUrl: './cmp-data-table-page.component.html',\n  styleUrl: './cmp-data-table-page.component.scss'\n})\nexport class CmpDataTablePageComponent implements AfterViewInit {\n  displayedColumns: string[] = ['sku', 'name', 'price', 'cost'];\n  dataSource = new MatTableDataSource(MERCHANT_DATA);\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n}\n",
            "styleUrl": "./cmp-data-table-page.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\">\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"sku\">\n            <th mat-header-cell *matHeaderCellDef> No. </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.sku}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <!-- price Column -->\n        <ng-container matColumnDef=\"price\">\n            <th mat-header-cell *matHeaderCellDef> price </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.price}} </td>\n        </ng-container>\n\n        <!-- cost Column -->\n        <ng-container matColumnDef=\"cost\">\n            <th mat-header-cell *matHeaderCellDef> cost </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.cost}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <mat-paginator [pageSize]=\"10\"\n                   [pageSizeOptions]=\"[5, 10, 20]\"\n                   showFirstLastButtons\n                   aria-label=\"Select page of periodic elements\">\n    </mat-paginator>\n</div>\n\n"
        },
        {
            "name": "CmpDataTableSinkComponent",
            "id": "component-CmpDataTableSinkComponent-fb76e712b08a0c46e9af612d5ff572831a11160af7c793668e561958a589d5f45e30521561d4ab6fed60141bcff3bd1d8f5f079881db4943c0bdfab06dca22c8",
            "file": "src/app/components/cmp-data-table-sink/cmp-data-table-sink.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cmp-data-table-sink",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cmp-data-table-sink.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-cmp-data-table-sink',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './cmp-data-table-sink.component.html',\n  styleUrl: './cmp-data-table-sink.component.scss'\n})\nexport class CmpDataTableSinkComponent {\n\n}\n",
            "styleUrl": "./cmp-data-table-sink.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>cmp-data-table-sink works!</p>\n"
        },
        {
            "name": "CmpDataTableSortComponent",
            "id": "component-CmpDataTableSortComponent-c599728c61ccd26e1b38f5b2dfefb42db630ea4e7ed4c3c91309e8d857d0e1cd9bf8e0d91f8c131b75610c4e0fab981328a3a077f8758c32f56f8c593e8c5bfd",
            "file": "src/app/components/cmp-data-table-sort/cmp-data-table-sort.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cmp-data-table-sort",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cmp-data-table-sort.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource(MERCHANT_DATA)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['sku', 'name', 'price', 'cost', 'brand', 'department', 'status']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "announceSortChange",
                    "args": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAnnounce the change in sort state for assistive technology.",
                    "description": "<p>Announce the change in sort state for assistive technology.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatSortModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableDataSource, MatTableModule } from \"@angular/material/table\";\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\nimport { MatPaginator, MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatSort, Sort, MatSortModule } from \"@angular/material/sort\";\nimport { MERCHANT_DATA } from \"../../data/items_data\";\n\n@Component({\n  selector: 'app-cmp-data-table-sort',\n  styleUrl: './cmp-data-table-sort.component.scss',\n  templateUrl: './cmp-data-table-sort.component.html',\n  standalone: true,\n  imports: [CommonModule, MatPaginatorModule, MatTableModule, MatSortModule],\n})\n\nexport class CmpDataTableSortComponent implements AfterViewInit {\n  displayedColumns: string[] = ['sku', 'name', 'price', 'cost', 'brand', 'department', 'status'];\n  dataSource = new MatTableDataSource(MERCHANT_DATA);\n\n  constructor(private _liveAnnouncer: LiveAnnouncer) {}\n\n  @ViewChild(MatSort)sort!: MatSort;\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  /** Announce the change in sort state for assistive technology. */\n  announceSortChange(sortState: Sort) {\n    // This example uses English messages. If your application supports\n    // multiple language, you would internationalize these strings.\n    // Furthermore, you can customize the message to add additional\n    // details about the values being sorted.\n    if (sortState.direction) {\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n    } else {\n      this._liveAnnouncer.announce('Sorting cleared');\n    }\n  }\n}\n",
            "styleUrl": "./cmp-data-table-sort.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "_liveAnnouncer",
                        "type": "LiveAnnouncer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<!-- sorting  -->\n<table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\"\n       class=\"mat-elevation-z8\">\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"sku\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by sku\">\n            No.\n        </th>\n        <td mat-cell *matCellDef=\"let merch\"> {{merch.sku}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by name\">\n            Name\n        </th>\n        <td mat-cell *matCellDef=\"let merch\"> {{merch.name}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"cost\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by cost\">\n            Cost\n        </th>\n        <td mat-cell *matCellDef=\"let merch\"> {{merch.cost}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by price\">\n            Price\n        </th>\n        <td mat-cell *matCellDef=\"let merch\"> {{merch.price}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"brand\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by brand\">\n            brand\n        </th>\n        <td mat-cell *matCellDef=\"let merch\"> {{merch.brand}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"department\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by department\">\n            department\n        </th>\n        <td mat-cell *matCellDef=\"let merch\"> {{merch.department}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by status\">\n            Status\n        </th>\n        <td mat-cell *matCellDef=\"let merch\"> {{merch.status}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\n                   [pageSize]=\"8\"\n                   aria-label=\"Select page\"\n                   showFirstLastButtons>\n    </mat-paginator>\n</table>\n"
        },
        {
            "name": "CmpHotStepperComponent",
            "id": "component-CmpHotStepperComponent-0686eb12b9f50c7e3dcd051eba14f9505d3154f14060fd73af39db1ce0324c0a13b306aa41c80dd81353c8d312383ee87e7ce3bfdcc067aad523a4ca3eacbd49",
            "file": "src/app/components/cmp-hot-stepper/cmp-hot-stepper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cmp-hot-stepper",
            "styleUrls": [
                "./cmp-hot-stepper.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cmp-hot-stepper.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "firstFormGroup",
                    "defaultValue": "this._formBuilder.group({\n    firstCtrl: ['', Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "secondFormGroup",
                    "defaultValue": "this._formBuilder.group({\n    secondCtrl: ['', Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "stepperOrientation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<StepperOrientation>",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "thirdFormGroup",
                    "defaultValue": "this._formBuilder.group({\n    thirdCtrl: ['', Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatStepperModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n\n",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormBuilder, Validators, FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {BreakpointObserver} from '@angular/cdk/layout';\nimport {StepperOrientation, MatStepperModule} from '@angular/material/stepper';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {AsyncPipe} from '@angular/common';\n\n/**\n * @title Stepper responsive\n */\n@Component({\n  selector: 'app-cmp-hot-stepper',\n  templateUrl: './cmp-hot-stepper.component.html',\n  styleUrls: ['./cmp-hot-stepper.component.scss'],\n  standalone: true,\n  imports: [\n    MatStepperModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    AsyncPipe,\n  ],\n})\nexport class CmpHotStepperComponent {\n  firstFormGroup = this._formBuilder.group({\n    firstCtrl: ['', Validators.required],\n  });\n  secondFormGroup = this._formBuilder.group({\n    secondCtrl: ['', Validators.required],\n  });\n  thirdFormGroup = this._formBuilder.group({\n    thirdCtrl: ['', Validators.required],\n  });\n  stepperOrientation: Observable<StepperOrientation>;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    breakpointObserver: BreakpointObserver,\n  ) {\n    this.stepperOrientation = breakpointObserver\n      .observe('(min-width: 800px)')\n      .pipe(map(({matches}) => (matches ? 'horizontal' : 'vertical')));\n  }\n}\n\n\n/**  Copyright 2023 Google LLC. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at https://angular.io/license */",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-stepper {\n  margin-top: 8px;\n}\n\n.mat-mdc-form-field {\n  margin-top: 16px;\n}",
                    "styleUrl": "./cmp-hot-stepper.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<p>cmp-hot-stepper works!</p>\n<!-- <mat-stepper>\n  <mat-step label=\"Step 1\" state=\"phone\">\n    <p>Put down your phones.</p>\n    <div>\n      <button mat-button matStepperNext>Next</button>\n    </div>\n  </mat-step>\n  <mat-step label=\"Step 2\" state=\"chat\">\n    <p>Socialize with each other.</p>\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button matStepperNext>Next</button>\n    </div>\n  </mat-step>\n  <mat-step label=\"Step 3\">\n    <p>You're welcome.</p>\n  </mat-step> -->\n\n  <!-- Icon overrides. -->\n<!--   <ng-template matStepperIcon=\"phone\">\n    <mat-icon>call_end</mat-icon>\n  </ng-template>\n  <ng-template matStepperIcon=\"chat\">\n    <mat-icon>forum</mat-icon>\n  </ng-template>\n</mat-stepper>\n -->\n\n @switch (stepperOrientation | async) {\n  @case ('horizontal') {\n    <div>Make your screen smaller to see a vertical stepper</div>\n  }\n  @case ('vertical') {\n    <div>Make your screen larger to see a horizontal stepper</div>\n  }\n}\n\n<mat-stepper\n  class=\"example-stepper\"\n  [orientation]=\"(stepperOrientation | async)!\">\n  <mat-step [stepControl]=\"firstFormGroup\" label=\"Fill out your name\">\n    <form [formGroup]=\"firstFormGroup\">\n      <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]=\"secondFormGroup\" label=\"Fill out your address\">\n    <form [formGroup]=\"secondFormGroup\">\n      <mat-form-field>\n        <mat-label>Address</mat-label>\n        <input matInput formControlName=\"secondCtrl\" placeholder=\"Ex. 1 Main St, New York, NY\"\n               required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]=\"thirdFormGroup\" label=\"Fill out your phone number\">\n    <form [formGroup]=\"thirdFormGroup\">\n      <mat-form-field>\n        <mat-label>Phone number</mat-label>\n        <input matInput formControlName=\"thirdCtrl\" placeholder=\"Ex. 12345678\" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>Done</ng-template>\n    <p>You are now done.</p>\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n    </div>\n  </mat-step>\n</mat-stepper>\n\n\n<!-- Copyright 2023 Google LLC. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at https://angular.io/license -->"
        },
        {
            "name": "CmpMatTableComponent",
            "id": "component-CmpMatTableComponent-6fdda541602d994c3d2ea92d5d042199c2189c02b72cd2e75c3777def4e796ddfda51cfcdf845e9a04e25cfb3ec24df0d9c5a5c1de5c6e141b30c830094caaf7",
            "file": "src/app/components/cmp-mat-table/cmp-mat-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cmp-mat-table",
            "styleUrls": [
                "./cmp-mat-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cmp-mat-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "new CmpMatTableDataSource()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns displayed in the table. Columns IDs can be added, removed, or reordered.</p>\n",
                    "line": 23,
                    "rawdescription": "\nColumns displayed in the table. Columns IDs can be added, removed, or reordered."
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<CmpMatTableItem>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                },
                {
                    "name": "MatSortModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { MatTableModule, MatTable } from '@angular/material/table';\nimport { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\nimport { MatSortModule, MatSort } from '@angular/material/sort';\nimport { CmpMatTableDataSource, CmpMatTableItem } from './cmp-mat-table-datasource';\n//import { DataTableFilterService } from './srv-data-table-filter.service';\n\n@Component({\n  selector: 'app-cmp-mat-table',\n  templateUrl: './cmp-mat-table.component.html',\n  styleUrls: ['./cmp-mat-table.component.scss'],\n  standalone: true,\n  imports: [MatTableModule, MatPaginatorModule, MatSortModule]\n})\n\nexport class CmpMatTableComponent implements AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatTable) table!: MatTable<CmpMatTableItem>;\n  dataSource = new CmpMatTableDataSource();\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\n  width: 100%;\n  background-color: 'cream';\n}\n#paginator {\n  font-size: 0.5rem;\n}",
                    "styleUrl": "./cmp-mat-table.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<h3>Material Table from Scafold </h3>\n<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource.data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 20]\"\n      aria-label=\"Select page\">\n  </mat-paginator>\n</div>\n"
        },
        {
            "name": "CmpMatTablePrototypeComponent",
            "id": "component-CmpMatTablePrototypeComponent-ef1f7bb866724a47e17b641ae1de4e04cee74fca9c23e332000d7e594cac9b335fb1125c17ab46ec9846855dab93a3e7bedfd3377311f91f9bb9011230b2181b",
            "file": "src/app/components/cmp-mat-table-prototype/cmp-mat-table-prototype.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cmp-mat-table-prototype",
            "styleUrls": [
                "./cmp-mat-table-prototype.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cmp-mat-table-prototype.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "new CmpMatTablePrototypeDataSource()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns displayed in the table. Columns IDs can be added, removed, or reordered.</p>\n",
                    "line": 21,
                    "rawdescription": "\nColumns displayed in the table. Columns IDs can be added, removed, or reordered."
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<CmpMatTablePrototypeItem>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                },
                {
                    "name": "MatSortModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { MatTableModule, MatTable } from '@angular/material/table';\nimport { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\nimport { MatSortModule, MatSort } from '@angular/material/sort';\nimport { CmpMatTablePrototypeDataSource, CmpMatTablePrototypeItem } from './cmp-mat-table-prototype-datasource';\n\n@Component({\n  selector: 'app-cmp-mat-table-prototype',\n  templateUrl: './cmp-mat-table-prototype.component.html',\n  styleUrls: ['./cmp-mat-table-prototype.component.scss'],\n  standalone: true,\n  imports: [MatTableModule, MatPaginatorModule, MatSortModule]\n})\nexport class CmpMatTablePrototypeComponent implements AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatTable) table!: MatTable<CmpMatTablePrototypeItem>;\n  dataSource = new CmpMatTablePrototypeDataSource();\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\n  width: 100%;\n}\n",
                    "styleUrl": "./cmp-mat-table-prototype.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource.data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 20]\"\n      aria-label=\"Select page\">\n  </mat-paginator>\n</div>\n"
        },
        {
            "name": "CmpTableSearchComponent",
            "id": "component-CmpTableSearchComponent-4b9ccbcfc426f2262c93f9d11575c2c9405605c46fd2be026e55355b0a0d447af7a68a3beac27c9f15e4e2344c6ff2b7c662c0ad19e3d8332cdb46ba33ef170e",
            "file": "src/app/components/cmp-table-search/cmp-table-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cmp-table-search",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cmp-table-search.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "thisArrayOne",
                    "defaultValue": "\"fuck this is bullshit\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "thisArrayTwo",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "satelliteFilter",
                    "args": [
                        {
                            "name": "fkey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fkey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { OnInit, Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableDataSource, MatTableModule} from '@angular/material/table';\nimport { MatInputModule} from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MerchandiseInfo, MERCHANT_DATA } from \"../../data/items_data\";\n\n\n@Component({\n  selector: 'app-cmp-table-search',\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatTableModule ],\n  templateUrl: './cmp-table-search.component.html',\n  styleUrl: './cmp-table-search.component.scss'\n})\n\nexport class CmpTableSearchComponent implements OnInit {\n  //dataSource = new MatTableDataSource(MERCHANT_DATA);\n  thisArrayOne: string  = \"fuck this is bullshit\";\n  thisArrayTwo: string  = \"\";\n  ngOnInit() {\n    console.log('init search');\n    console.log(this.thisArrayOne);\n  }\n\n  satelliteFilter(fkey:string) {\n    console.log('satelliteFilter', fkey);\n    if (!fkey) this.thisArrayTwo = this.thisArrayOne;\n    //this.thisArrayTwo = this.thisArrayOne.filter(fkey);\n    this.thisArrayTwo = this.thisArrayOne.replace(/bullshit/gi,fkey );\n\n    //this.thisArrayTwo = fkey;\n    // if (!fkey) this.thisArrayTwo = this.thisArrayOne;\n    // console.log('satelliteFilter', fkey);\n    // this.thisArrayTwo = this.thisArrayOne.filter(\n    //   // foo = foo.includes(fkey.toLoerCase())\n    // )\n    console.log(this.thisArrayTwo);\n  }\n}\n",
            "styleUrl": "./cmp-table-search.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-form-field>\n  <mat-label>Search</mat-label>\n<!--  <input matInput (keyup)=\"satelliteFilter()\" placeholder=\"Ex. Mia\" #input>-->\n  <input #searcher matInput placeholder=\"Search\">\n  <button (click)=\"satelliteFilter(searcher.value)\" class=\"search\">Go</button>\n</mat-form-field>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-cad94b233ec8e80ceb541e7972c5f9737e08237b4e137112f3987ca48ee0cce5c0d57798d41daa5d4d24d6bdbb2df1606ab68cca2aa0a1785e38f99f3cac0729",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "LoHeaderMainComponent",
            "id": "component-LoHeaderMainComponent-ce6f8193db8d4904692f03fb30166a079f3f0d9a75fb95816c7c405a45e4b7124789a45688c97de1ba7e854f2eee948a2248eb8e25aa8992383ed45353d258f9",
            "file": "src/app/layouts/lo-header-main/lo-header-main.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lo-header-main",
            "styleUrls": [],
            "styles": [],
            "template": "<header class=\"hdr-main\">\n  LOGO\n</header>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-lo-header-main',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <header class=\"hdr-main\">\n      LOGO \n    </header>\n  `,\n  styleUrl: './lo-header-main.component.scss'\n})\nexport class LoHeaderMainComponent {\n\n}\n",
            "styleUrl": "./lo-header-main.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "LoNavMainComponent",
            "id": "component-LoNavMainComponent-eec9869fa27cd8202ea8e187661a7a0755a9308ad7896e552fa66d2b7d1375527cb980d19186d70017c1ea8e94f87ff2b6afa8370f776f669f406051d4b2aa61",
            "file": "src/app/layouts/lo-nav-main/lo-nav-main.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lo-nav-main",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"left-side\">\n  <h1><a routerLink=\"/home\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">HOME</a></h1>\n  <nav>\n    <ul>\n      <li><a routerLink=\"/mat-table\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">MAT TABLE</a></li>\n      <li><a routerLink=\"/mat-table/working\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">MAT TABLE WORKING</a></li>\n      <li>--</li>\n      <li><a routerLink=\"/tables\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">TABLES <em>&#x2713;&#x2713;&#x2713;</em></a></li>\n      <li>-<a routerLink=\"/tables/data\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">DATA DRIVEN</a></li>\n      <li>-<a routerLink=\"/tables/page\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">PAGING <em>&#x2713;</em></a></li>\n      <li>-<a routerLink=\"/tables/sort\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">SORT TABLE <em>&#x2713;</em></a></li>\n      <li>-<a routerLink=\"/tables/drag\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">DRAGABLE <em>&#x2713;</em></a></li>\n      <li>-<a routerLink=\"/tables/link\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">LINKABLE _</a></li>\n      <li>-<a routerLink=\"/tables/filter\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">FILTERABLE <em>&#x2713;</em></a></li>\n      <li>-<a routerLink=\"/tables/header\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">With HEADER __</a></li>\n      <li>-<a routerLink=\"/tables/buttons\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">With BUTTONS __</a></li>\n      <li>-<a routerLink=\"/tables/sink\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">With KITCHEN SINK __</a></li>\n      <li>-<a routerLink=\"/tables/all\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">ALL</a></li>\n      <li>--</li>\n      <li><a routerLink=\"/hot-stepper\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">HOT STEPPER</a></li>\n    </ul>\n  </nav>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\nimport { routes } from '../../app.routes';\n\n\n@Component({\n  selector: 'app-lo-nav-main',\n  standalone: true,\n  imports: [CommonModule, RouterLink],\n  template: `\n    <div class=\"left-side\">\n      <h1><a routerLink=\"/home\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">HOME</a></h1>\n      <nav>\n        <ul>\n          <li><a routerLink=\"/mat-table\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">MAT TABLE</a></li>\n          <li><a routerLink=\"/mat-table/working\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">MAT TABLE WORKING</a></li>\n          <li>--</li>\n          <li><a routerLink=\"/tables\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">TABLES <em>&#x2713;&#x2713;&#x2713;</em></a></li>\n          <li>-<a routerLink=\"/tables/data\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">DATA DRIVEN</a></li>\n          <li>-<a routerLink=\"/tables/page\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">PAGING <em>&#x2713;</em></a></li>\n          <li>-<a routerLink=\"/tables/sort\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">SORT TABLE <em>&#x2713;</em></a></li>\n          <li>-<a routerLink=\"/tables/drag\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">DRAGABLE <em>&#x2713;</em></a></li>\n          <li>-<a routerLink=\"/tables/link\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">LINKABLE _</a></li>\n          <li>-<a routerLink=\"/tables/filter\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">FILTERABLE <em>&#x2713;</em></a></li>\n          <li>-<a routerLink=\"/tables/header\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">With HEADER __</a></li>\n          <li>-<a routerLink=\"/tables/buttons\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">With BUTTONS __</a></li>\n          <li>-<a routerLink=\"/tables/sink\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">With KITCHEN SINK __</a></li>\n          <li>-<a routerLink=\"/tables/all\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">ALL</a></li>\n          <li>--</li>\n          <li><a routerLink=\"/hot-stepper\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">HOT STEPPER</a></li>\n        </ul>\n      </nav>\n    </div>\n  `,\n  styleUrl: './lo-nav-main.component.scss'\n})\nexport class LoNavMainComponent {\n  //@Output() isActiveChange: EventEmitter<boolean>;\n}\n",
            "styleUrl": "./lo-nav-main.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-d32b0f19628254ea3fc5526c4d4564ada1cc83cf936759006d90a46f5874b02a3359e331bddda20b22e74a616a6443c660602ba74dd38ebe1160759e0de6f7ba",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\n.storybook-page h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\n.storybook-page ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.storybook-page .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PageHomeComponent",
            "id": "component-PageHomeComponent-81544a7cb2cd3979e129f239b7b0daf519915660203901da3224cdd333759e9787f091d7138d366cfb43e3101e6b3798e600fa17a7a808b24e6beab3a330634b",
            "file": "src/app/pages/page-home/page-home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-home",
            "styleUrls": [],
            "styles": [],
            "template": "<h1>\n  Hello There!\n</h1>\n<h2>This is a sandbox for sketching out and testing various newer angular paterns, and the latest version of angular material</h2>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-page-home',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <h1>\n      Hello There!\n    </h1>\n    <h2>This is a sandbox for sketching out and testing various newer angular paterns, and the latest version of angular material</h2>\n  `,\n  styleUrl: './page-home.component.scss'\n})\nexport class PageHomeComponent {\n\n}\n",
            "styleUrl": "./page-home.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PageMatTableComponent",
            "id": "component-PageMatTableComponent-98720bb71fe5a5c1c1a54a09c3fea27da9273b3920991886ccb89932e86c46c1641ca164ec059c3b303aad62d04ae7a23c893d664e38bc85731b63198f00ec4d",
            "file": "src/app/pages/page-mat-table/page-mat-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-mat-table",
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n  <h1 class=\"page-title\">Items (Material)</h1>\n  <p>\n    Dolor sit amet consectetur adipisicing, elit. Sapiente consectetur atque recusandae tempora vitae eligendi voluptas harum qui placeat porro earum ex voluptate dolor suscipit error pariatur distinctio ea, omnis.\n  </p>\n\n  <h2>Default Table</h2>\n    <div class=\"table-meta-header\">\n      <div class=\"side-a\">\n        <button mat-raised-button color=\"primary\">Primary</button>\n      </div>\n      <div class=\"side-b\">\n        <app-cmp-table-search />\n      </div>\n   </div>\n\n  <app-cmp-mat-table />\n</div>\n<br>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "CmpMatTableComponent",
                    "type": "component"
                },
                {
                    "name": "CmpTableSearchComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { CmpMatTableComponent } from '../../components/cmp-mat-table/cmp-mat-table.component';\nimport { CmpTableSearchComponent } from '../../components/cmp-table-search/cmp-table-search.component';\n\n/**\n * @title Table with columns defined using a for loop instead of statically written in the template.\n */\n\n@Component({\n  selector: 'app-page-mat-table',\n  standalone: true,\n  imports: [ CommonModule, MatTableModule, MatButtonModule, CmpMatTableComponent, CmpTableSearchComponent ],\n  template: `\n    <div>\n      <h1 class=\"page-title\">Items (Material)</h1>\n      <p>\n        Dolor sit amet consectetur adipisicing, elit. Sapiente consectetur atque recusandae tempora vitae eligendi voluptas harum qui placeat porro earum ex voluptate dolor suscipit error pariatur distinctio ea, omnis.\n      </p>\n\n      <h2>Default Table</h2>\n        <div class=\"table-meta-header\">\n          <div class=\"side-a\">\n            <button mat-raised-button color=\"primary\">Primary</button>\n          </div>\n          <div class=\"side-b\">\n            <app-cmp-table-search />\n          </div>\n       </div>\n\n      <app-cmp-mat-table />\n    </div>\n    <br>\n  `,\n  styleUrl: './page-mat-table.component.scss'\n})\n\nexport class PageMatTableComponent {}\n",
            "styleUrl": "./page-mat-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PageTablesComponent",
            "id": "component-PageTablesComponent-cf7fc9710ad2ce554f96d4e5d61788b098757a6b3db72de68da9ec20c8ea291fd925c99c4c49d3a129494adbaa4c9b0ec3ec362e94f3c686cf78db61a4d5cf7c",
            "file": "src/app/pages/page-tables/page-tables.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-tables",
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n  <h2 class=\"page-title\">Items ({{id }})</h2>\n  <p>\n    This into text also tests parameters. '{{id}}' is the :id passed through from the url or path. The 'routerDataParam' is '{{routerDataParam}}'. While the 'queryParam' is '{{queryParam}}'. '{{routerResolverData}}' is the router resolver data.\n  </p>\n\n        <ng-container *ngIf=\"(id==='search' || id==='filter' || id==='all')\">\n          <p>This is shown on search, filter or all</p>\n        </ng-container>\n\n        <ng-container *ngIf=\"(id==='search' || id==='filter' || id==='all')\">\n          <p>This is shown on search, filter or all</p>\n        </ng-container>\n\n        <div class=\"table-meta-header\">\n          <div class=\"side-a\">\n            <button mat-raised-button color=\"primary\">BUTTON</button>\n          </div>\n          <div class=\"side-b\">\n            <app-cmp-table-search></app-cmp-table-search>\n          </div>\n        </div>\n\n        <ng-container *ngIf=\"(routerDataParam==='default' || id==='all')\">\n          <h2>Default Table</h2>\n          <app-cmp-data-table />\n        </ng-container>\n\n        <ng-container *ngIf=\"(id==='sort'|| id==='all')\">\n          <h2>Sort Table</h2>\n          <app-cmp-data-table-sort />\n        </ng-container>\n\n        <ng-container *ngIf=\"(id==='drag'|| id==='all')\">\n          <h2>Drag and Drop columns Table</h2>\n          <app-cmp-data-table-drag />\n        </ng-container>\n\n        <ng-container *ngIf=\"(id==='page'|| id==='all')\">\n          <h2>Pagination Table</h2>\n          <app-cmp-data-table-page />\n        </ng-container>\n\n        <ng-container *ngIf=\"(id==='search' || id==='filter' || id==='all')\">\n          <h2>Filter Table</h2>\n          <app-cmp-data-table-filter [linkItem]=\"true\" [showSearch]=\"true\" />\n        </ng-container>\n\n        <ng-container *ngIf=\"(id==='loop'|| id==='all')\">\n          <h2>Looping Table</h2>\n          <app-cmp-data-table-loop />\n        </ng-container>\n\n        <ng-container *ngIf=\"(id==='col-loop'|| id==='all')\">\n          <h2>Looping column ex Table</h2>\n          <app-cmp-data-table-col-loop />\n        </ng-container>\n\n\n      </div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 107,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "queryParam",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 108,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "routerDataParam",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 109,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "routerResolverData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 110,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "CmpDataTableComponent",
                    "type": "component"
                },
                {
                    "name": "CmpDataTablePageComponent",
                    "type": "component"
                },
                {
                    "name": "CmpDataTableSortComponent",
                    "type": "component"
                },
                {
                    "name": "CmpDataTableFilterComponent",
                    "type": "component"
                },
                {
                    "name": "CmpDataTableDragComponent",
                    "type": "component"
                },
                {
                    "name": "CmpDataTableLoopComponent",
                    "type": "component"
                },
                {
                    "name": "CmpDataTableColLoopComponent",
                    "type": "component"
                },
                {
                    "name": "CmpTableSearchComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { CmpDataTableComponent } from '../../components/cmp-data-table/cmp-data-table.component';\nimport { CmpDataTablePageComponent } from '../../components/cmp-data-table-page/cmp-data-table-page.component';\nimport { CmpDataTableSortComponent } from '../../components/cmp-data-table-sort/cmp-data-table-sort.component';\nimport { CmpDataTableDragComponent } from '../../components/cmp-data-table-drag/cmp-data-table-drag.component';\nimport { CmpDataTableLoopComponent } from '../../components/cmp-data-table-loop/cmp-data-table-loop.component';\nimport { CmpDataTableColLoopComponent } from '../../components/cmp-data-table-col-loop/cmp-data-table-col-loop.component';\nimport { CmpDataTableFilterComponent } from '../../components/cmp-data-table-filter/cmp-data-table-filter.component';\nimport { CmpTableSearchComponent } from '../../components/cmp-table-search/cmp-table-search.component';\n\n/**\n * @title Table with columns defined using a for loop instead of statically written in the template.\n */\n\n@Component({\n  selector: 'app-page-tables',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatButtonModule,\n    CmpDataTableComponent,\n    CmpDataTablePageComponent,\n    CmpDataTableSortComponent,\n    CmpDataTableFilterComponent,\n    CmpDataTableDragComponent,\n    CmpDataTableLoopComponent,\n    CmpDataTableColLoopComponent,\n    CmpTableSearchComponent\n    ],\n  template: `\n    <div>\n      <h2 class=\"page-title\">Items ({{id }})</h2>\n      <p>\n        This into text also tests parameters. '{{id}}' is the :id passed through from the url or path. The 'routerDataParam' is '{{routerDataParam}}'. While the 'queryParam' is '{{queryParam}}'. '{{routerResolverData}}' is the router resolver data.\n      </p>\n\n            <ng-container *ngIf=\"(id==='search' || id==='filter' || id==='all')\">\n              <p>This is shown on search, filter or all</p>\n            </ng-container>\n\n            <ng-container *ngIf=\"(id==='search' || id==='filter' || id==='all')\">\n              <p>This is shown on search, filter or all</p>\n            </ng-container>\n\n            <div class=\"table-meta-header\">\n              <div class=\"side-a\">\n                <button mat-raised-button color=\"primary\">BUTTON</button>\n              </div>\n              <div class=\"side-b\">\n                <app-cmp-table-search></app-cmp-table-search>\n              </div>\n            </div>\n\n            <ng-container *ngIf=\"(routerDataParam==='default' || id==='all')\">\n              <h2>Default Table</h2>\n              <app-cmp-data-table />\n            </ng-container>\n\n            <ng-container *ngIf=\"(id==='sort'|| id==='all')\">\n              <h2>Sort Table</h2>\n              <app-cmp-data-table-sort />\n            </ng-container>\n\n            <ng-container *ngIf=\"(id==='drag'|| id==='all')\">\n              <h2>Drag and Drop columns Table</h2>\n              <app-cmp-data-table-drag />\n            </ng-container>\n\n            <ng-container *ngIf=\"(id==='page'|| id==='all')\">\n              <h2>Pagination Table</h2>\n              <app-cmp-data-table-page />\n            </ng-container>\n\n            <ng-container *ngIf=\"(id==='search' || id==='filter' || id==='all')\">\n              <h2>Filter Table</h2>\n              <app-cmp-data-table-filter [linkItem]=\"true\" [showSearch]=\"true\" />\n            </ng-container>\n\n            <ng-container *ngIf=\"(id==='loop'|| id==='all')\">\n              <h2>Looping Table</h2>\n              <app-cmp-data-table-loop />\n            </ng-container>\n\n            <ng-container *ngIf=\"(id==='col-loop'|| id==='all')\">\n              <h2>Looping column ex Table</h2>\n              <app-cmp-data-table-col-loop />\n            </ng-container>\n\n\n          </div>\n`,\n  styleUrl: './page-tables.component.scss'\n})\n\nexport class PageTablesComponent {\n  // old and busted\n  // constructor(private activatedRoute:ActivatedRoute ) {\n  //   const id = this.activatedRoute.snapshot.params['id'];\n  // }\n\n  //new hotness\n  @Input() id!: string | undefined;\n  @Input() queryParam!: string;\n  @Input() routerDataParam!: string;\n  @Input() routerResolverData!: string;\n\n}\n",
            "styleUrl": "./page-tables.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [
        {
            "name": "DemoMaterialModule",
            "id": "module-DemoMaterialModule-71c30100f077b0bda0b5498c386c02c76e49068f48400565b9652be48059d90bbbf66846834641e5c293516db3d6cd3c6cec7126887381c2a3388afd4067d077",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/material-modules.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google LLC. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideRouter(routes, withComponentInputBinding()),\n    provideAnimations()\n  ]\n}"
            },
            {
                "name": "EXAMPLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/cmp-mat-table/cmp-mat-table-datasource.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CmpMatTableItem[]",
                "defaultValue": "[\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n]"
            },
            {
                "name": "EXAMPLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/cmp-mat-table-prototype/cmp-mat-table-prototype-datasource.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CmpMatTablePrototypeItem[]",
                "defaultValue": "[\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n]"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\n    await expect(loginButton).toBeInTheDocument();\n    await userEvent.click(loginButton);\n    await expect(loginButton).not.toBeInTheDocument();\n\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\n    await expect(logoutButton).toBeInTheDocument();\n  },\n}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "MERCHANT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/items_data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MerchandiseInfo[]",
                "defaultValue": "[\n  {sku: 11111111, name: 'Hydrogen', price: 1.0079, cost: 0.99, brand: 'H', department: 'food', status: 'in stock'},\n  {sku: 89422, name: 'Helium', price: 4.0026, cost: 0.99, brand: 'He', department: 'food', status: 'in stock'},\n  {sku: 51588, name: 'Lithium', price: 6.941, cost: 0.99, brand: 'Li', department: 'food', status: 'in stock'},\n  {sku: 41575, name: 'Beryllium', price: 9.0122, cost: 0.99, brand: 'Be', department: 'food', status: 'in stock'},\n  {sku: 28046312, name: 'Boron', price: 10.811, cost: 0.99, brand: 'B', department: 'food', status: 'in stock'},\n  {sku: 96025071, name: 'Carbon', price: 12.0107, cost: 0.99, brand: 'C', department: 'food', status: 'in stock'},\n  {sku: 859486042, name: 'Nitrogen', price: 14.0067, cost: 0.99, brand: 'N', department: 'food', status: 'in stock'},\n  {sku: 52146128, name: 'Oxygen', price: 15.9994, cost: 0.99, brand: 'O', department: 'food', status: 'in stock'},\n  {sku: 38001985, name: 'Fluorine', price: 18.9984, cost: 0.99, brand: 'F', department: 'food', status: 'in stock'},\n  {sku: 998800, name: 'Neon', price: 20.1797, cost: 0.99, brand: 'Ne', department: 'food', status: 'in stock'},\n  {sku: 55778899, name: 'Lithium', price: 6.941, cost: 0.99, brand: 'Li', department: 'food', status: 'in stock'},\n  {sku: 10099, name: 'Beryllium', price: 9.0122, cost: 0.99, brand: 'Be', department: 'food', status: 'in stock'},\n  {sku: 1230001, name: 'Boron', price: 10.811, cost: 0.99, brand: 'B', department: 'food', status: 'in stock'},\n  {sku: 39299111, name: 'Carbon', price: 12.0107, cost: 0.99, brand: 'C', department: 'food', status: 'in stock'},\n  {sku: 85484752, name: 'Nitrogen', price: 14.0067, cost: 0.99, brand: 'N', department: 'food', status: 'in stock'},\n  {sku: 52816188, name: 'Oxygen', price: 15.9994, cost: 0.99, brand: 'O', department: 'food', status: 'in stock'},\n  {sku: 13719895, name: 'Fluorine', price: 18.9984, cost: 0.99, brand: 'F', department: 'food', status: 'in stock'},\n  {sku: 99880099, name: 'Neon', price: 20.1797, cost: 0.99, brand: 'Ne', department: 'food', status: 'in stock'},\n  {sku: 19912008, name: 'Lithium', price: 6.941, cost: 0.99, brand: 'Li', department: 'food', status: 'in stock'},\n  {sku: 19911996, name: 'Beryllium', price: 9.0122, cost: 0.99, brand: 'Be', department: 'food', status: 'in stock'},\n  {sku: 2123139, name: 'Boron', price: 10.811, cost: 0.99, brand: 'B', department: 'food', status: 'in stock'},\n  {sku: 57587507, name: 'Carbon', price: 12.0107, cost: 0.99, brand: 'C', department: 'food', status: 'in stock'},\n  {sku: 85948377, name: 'Nitrogen', price: 14.0067, cost: 0.99, brand: 'N', department: 'food', status: 'in stock'},\n  {sku: 52855778, name: 'Oxygen', price: 15.9994, cost: 0.99, brand: 'O', department: 'food', status: 'in stock'},\n  {sku: 38045895, name: 'Fluorine', price: 18.9984, cost: 0.99, brand: 'F', department: 'food', status: 'in stock'},\n  {sku: 56790800, name: 'Neon', price: 20.1797, cost: 0.99, brand: 'Ne', department: 'food', status: 'in stock'},\n]"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n  title: 'Example/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  render: (args: ButtonComponent) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HeaderComponent>",
                "defaultValue": "{\n  title: 'Example/Header',\n  component: HeaderComponent,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PageComponent>",
                "defaultValue": "{\n  title: 'Example/Page',\n  component: PageComponent,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CmpDataTableFilterComponent>",
                "defaultValue": "{\n  component: CmpDataTableFilterComponent,\n  title: \"Tables/CmpDataTableFilterComponent\",  \n  tags: ['autodocs'],\n  render: (args: CmpDataTableFilterComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n  argTypes: {\n  },\n}"
            },
            {
                "name": "NonPaging",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    pageable:false,\n  },\n}"
            },
            {
                "name": "Other",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n  },\n  play: async ({ canvasElement }) => {\n    // const canvas = within(canvasElement);\n    // expect(canvas.getByText(/custom-mat-grid-search works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Paging",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    updateGridData: \"\",\n    url: \"\",\n    filterDataUrl: \"\",\n    showSearch: true,\n    rowsheight: 50,\n    statusbarheight: 60,\n    pagermode: \"default\",\n    pagesizeoptions: [1,2,3],\n    pagerheight: 60,\n    autoheight: true,\n    pageable: true,\n    sortable: true,\n    linkItem: true,\n    linkMore: true,\n  },\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
            }
        ],
        "functions": [
            {
                "name": "compare",
                "file": "src/app/components/cmp-mat-table/cmp-mat-table-datasource.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                "args": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "compare",
                "file": "src/app/components/cmp-mat-table-prototype/cmp-mat-table-prototype-datasource.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                "args": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeaderComponent>",
                "file": "src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PageComponent>",
                "file": "src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CmpDataTableFilterComponent>",
                "file": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideRouter(routes, withComponentInputBinding()),\n    provideAnimations()\n  ]\n}"
                }
            ],
            "src/app/components/cmp-mat-table/cmp-mat-table-datasource.ts": [
                {
                    "name": "EXAMPLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/cmp-mat-table/cmp-mat-table-datasource.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CmpMatTableItem[]",
                    "defaultValue": "[\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n]"
                }
            ],
            "src/app/components/cmp-mat-table-prototype/cmp-mat-table-prototype-datasource.ts": [
                {
                    "name": "EXAMPLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/cmp-mat-table-prototype/cmp-mat-table-prototype-datasource.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CmpMatTablePrototypeItem[]",
                    "defaultValue": "[\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n]"
                }
            ],
            "src/stories/button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n  title: 'Example/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  render: (args: ButtonComponent) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
                }
            ],
            "src/stories/header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HeaderComponent>",
                    "defaultValue": "{\n  title: 'Example/Header',\n  component: HeaderComponent,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
                }
            ],
            "src/stories/page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\n    await expect(loginButton).toBeInTheDocument();\n    await userEvent.click(loginButton);\n    await expect(loginButton).not.toBeInTheDocument();\n\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\n    await expect(logoutButton).toBeInTheDocument();\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PageComponent>",
                    "defaultValue": "{\n  title: 'Example/Page',\n  component: PageComponent,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
                }
            ],
            "src/app/data/items_data.ts": [
                {
                    "name": "MERCHANT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/items_data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MerchandiseInfo[]",
                    "defaultValue": "[\n  {sku: 11111111, name: 'Hydrogen', price: 1.0079, cost: 0.99, brand: 'H', department: 'food', status: 'in stock'},\n  {sku: 89422, name: 'Helium', price: 4.0026, cost: 0.99, brand: 'He', department: 'food', status: 'in stock'},\n  {sku: 51588, name: 'Lithium', price: 6.941, cost: 0.99, brand: 'Li', department: 'food', status: 'in stock'},\n  {sku: 41575, name: 'Beryllium', price: 9.0122, cost: 0.99, brand: 'Be', department: 'food', status: 'in stock'},\n  {sku: 28046312, name: 'Boron', price: 10.811, cost: 0.99, brand: 'B', department: 'food', status: 'in stock'},\n  {sku: 96025071, name: 'Carbon', price: 12.0107, cost: 0.99, brand: 'C', department: 'food', status: 'in stock'},\n  {sku: 859486042, name: 'Nitrogen', price: 14.0067, cost: 0.99, brand: 'N', department: 'food', status: 'in stock'},\n  {sku: 52146128, name: 'Oxygen', price: 15.9994, cost: 0.99, brand: 'O', department: 'food', status: 'in stock'},\n  {sku: 38001985, name: 'Fluorine', price: 18.9984, cost: 0.99, brand: 'F', department: 'food', status: 'in stock'},\n  {sku: 998800, name: 'Neon', price: 20.1797, cost: 0.99, brand: 'Ne', department: 'food', status: 'in stock'},\n  {sku: 55778899, name: 'Lithium', price: 6.941, cost: 0.99, brand: 'Li', department: 'food', status: 'in stock'},\n  {sku: 10099, name: 'Beryllium', price: 9.0122, cost: 0.99, brand: 'Be', department: 'food', status: 'in stock'},\n  {sku: 1230001, name: 'Boron', price: 10.811, cost: 0.99, brand: 'B', department: 'food', status: 'in stock'},\n  {sku: 39299111, name: 'Carbon', price: 12.0107, cost: 0.99, brand: 'C', department: 'food', status: 'in stock'},\n  {sku: 85484752, name: 'Nitrogen', price: 14.0067, cost: 0.99, brand: 'N', department: 'food', status: 'in stock'},\n  {sku: 52816188, name: 'Oxygen', price: 15.9994, cost: 0.99, brand: 'O', department: 'food', status: 'in stock'},\n  {sku: 13719895, name: 'Fluorine', price: 18.9984, cost: 0.99, brand: 'F', department: 'food', status: 'in stock'},\n  {sku: 99880099, name: 'Neon', price: 20.1797, cost: 0.99, brand: 'Ne', department: 'food', status: 'in stock'},\n  {sku: 19912008, name: 'Lithium', price: 6.941, cost: 0.99, brand: 'Li', department: 'food', status: 'in stock'},\n  {sku: 19911996, name: 'Beryllium', price: 9.0122, cost: 0.99, brand: 'Be', department: 'food', status: 'in stock'},\n  {sku: 2123139, name: 'Boron', price: 10.811, cost: 0.99, brand: 'B', department: 'food', status: 'in stock'},\n  {sku: 57587507, name: 'Carbon', price: 12.0107, cost: 0.99, brand: 'C', department: 'food', status: 'in stock'},\n  {sku: 85948377, name: 'Nitrogen', price: 14.0067, cost: 0.99, brand: 'N', department: 'food', status: 'in stock'},\n  {sku: 52855778, name: 'Oxygen', price: 15.9994, cost: 0.99, brand: 'O', department: 'food', status: 'in stock'},\n  {sku: 38045895, name: 'Fluorine', price: 18.9984, cost: 0.99, brand: 'F', department: 'food', status: 'in stock'},\n  {sku: 56790800, name: 'Neon', price: 20.1797, cost: 0.99, brand: 'Ne', department: 'food', status: 'in stock'},\n]"
                }
            ],
            "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CmpDataTableFilterComponent>",
                    "defaultValue": "{\n  component: CmpDataTableFilterComponent,\n  title: \"Tables/CmpDataTableFilterComponent\",  \n  tags: ['autodocs'],\n  render: (args: CmpDataTableFilterComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n  argTypes: {\n  },\n}"
                },
                {
                    "name": "NonPaging",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    pageable:false,\n  },\n}"
                },
                {
                    "name": "Other",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n  },\n  play: async ({ canvasElement }) => {\n    // const canvas = within(canvasElement);\n    // expect(canvas.getByText(/custom-mat-grid-search works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "Paging",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    updateGridData: \"\",\n    url: \"\",\n    filterDataUrl: \"\",\n    showSearch: true,\n    rowsheight: 50,\n    statusbarheight: 60,\n    pagermode: \"default\",\n    pagesizeoptions: [1,2,3],\n    pagerheight: 60,\n    autoheight: true,\n    pageable: true,\n    sortable: true,\n    linkItem: true,\n    linkMore: true,\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/components/cmp-mat-table/cmp-mat-table-datasource.ts": [
                {
                    "name": "compare",
                    "file": "src/app/components/cmp-mat-table/cmp-mat-table-datasource.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                    "args": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/components/cmp-mat-table-prototype/cmp-mat-table-prototype-datasource.ts": [
                {
                    "name": "compare",
                    "file": "src/app/components/cmp-mat-table-prototype/cmp-mat-table-prototype-datasource.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                    "args": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/stories/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeaderComponent>",
                    "file": "src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/page.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PageComponent>",
                    "file": "src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CmpDataTableFilterComponent>",
                    "file": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 8,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-data-table-col-loop/cmp-data-table-col-loop.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CmpDataTableColLoopComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-data-table-drag/cmp-data-table-drag.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CmpDataTableDragComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CmpDataTableFilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NonPaging",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Other",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Paging",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-data-table-filter/cmp-data-table-filter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-data-table-filter/srv-data-table-filter.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DataTableFilterService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-data-table-loop/cmp-data-table-loop.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CmpDataTableLoopComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-data-table-page/cmp-data-table-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CmpDataTablePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-data-table-sink/cmp-data-table-sink.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CmpDataTableSinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-data-table-sort/cmp-data-table-sort.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CmpDataTableSortComponent",
                "coveragePercent": 14,
                "coverageCount": "1/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-data-table/cmp-data-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CmpDataTableComponent",
                "coveragePercent": 14,
                "coverageCount": "1/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-hot-stepper/cmp-hot-stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CmpHotStepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-mat-table-prototype/cmp-mat-table-prototype-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CmpMatTablePrototypeDataSource",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/app/components/cmp-mat-table-prototype/cmp-mat-table-prototype-datasource.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CmpMatTablePrototypeItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-mat-table-prototype/cmp-mat-table-prototype-datasource.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compare",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/components/cmp-mat-table-prototype/cmp-mat-table-prototype-datasource.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXAMPLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-mat-table-prototype/cmp-mat-table-prototype.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CmpMatTablePrototypeComponent",
                "coveragePercent": 14,
                "coverageCount": "1/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-mat-table/cmp-mat-table-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CmpMatTableDataSource",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/app/components/cmp-mat-table/cmp-mat-table-datasource.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CmpMatTableItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-mat-table/cmp-mat-table-datasource.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compare",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/components/cmp-mat-table/cmp-mat-table-datasource.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXAMPLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-mat-table/cmp-mat-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CmpMatTableComponent",
                "coveragePercent": 14,
                "coverageCount": "1/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cmp-table-search/cmp-table-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CmpTableSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/data/items_data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MerchandiseInfo",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/data/items_data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MERCHANT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/lo-header-main/lo-header-main.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoHeaderMainComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/lo-nav-main/lo-nav-main.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoNavMainComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/page-home/page-home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageHomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/page-mat-table/page-mat-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageMatTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/page-tables/page-tables.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageTablesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}